version: '3'

dotenv: ['.env']

tasks:
  list:
    desc: Lists available commands
    cmds:
      - task -l
  init:
    desc: Copies example configuration files to your own. The copied files are ignored with .gitignore file as well as sync dependencies.
    cmds:
      - go run cmd/init/main.go

  migrate-create:
    desc: Creates .sql migration files (Up and Down). Set name by appending with 'NAME={{name_of_file}}'
    cmds:
      - migrate create -ext sql -dir database/migrations -format unix "{{.NAME}}"

  migrate:
    desc: Migrates UP the database
    cmds:
      - migrate -path database/migrations up

  gen-orm:
    desc: Reads your current database schema and creates models as well as orm.
    cmds:
      - sqlboiler --wipe --add-soft-deletes psql

  run:
    desc: Runs the app
    cmds:
      - go run cmd/go8/main.go

  build:
    desc: Creates a compiled binary and copy configuration files
    cmds:
      - go build -v -i cmd/go8/main.go
      - mkdir -p build
      - mv go8 build/
      - mkdir build/config
      - cp config/*.yml build/config

  swagger:
    desc: Generates Swagger page for API reference
    cmds:
      - swag init -g cmd/go8/main.go


  docker-build:
    desc: Builds a Docker image
    cmds:
      - docker build -t go8 -f docker/Dockerfile .

  docker-run:
    desc: Runs the app Docker image as a Docker container
    cmds:
      - docker run -p 3080:3080 --rm -it --net=host --name go8container go8

  fmt:
    desc: Lint code
    cmds:
      - go fmt ./...

  tidy:
    desc: Downloads dependencies and removes unused ones
    cmds:
      - go mod tidy

  vet:
    desc: Vets code
    cmds:
      - go vet ./...

  golint:
    desc: Uses golangci-lint
    cmds:
      - golangci-lint run